
## <summary>policy for amazon_ecs_init</summary>

########################################
## <summary>
##	Execute amazon_ecs_init_exec_t in the amazon_ecs_init domain.
## </summary>
## <param name="domain">
## <summary>
##	Domain allowed to transition.
## </summary>
## </param>
#
interface(`amazon_ecs_init_domtrans',`
	gen_require(`
		type amazon_ecs_init_t, amazon_ecs_init_exec_t;
	')

	corecmd_search_bin($1)
	domtrans_pattern($1, amazon_ecs_init_exec_t, amazon_ecs_init_t)
')

######################################
## <summary>
##	Execute amazon_ecs_init in the caller domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amazon_ecs_init_exec',`
	gen_require(`
		type amazon_ecs_init_exec_t;
	')

	corecmd_search_bin($1)
	can_exec($1, amazon_ecs_init_exec_t)
')

########################################
## <summary>
##	Search amazon_ecs_init cache directories.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amazon_ecs_init_search_cache',`
	gen_require(`
		type amazon_ecs_init_cache_t;
	')

	allow $1 amazon_ecs_init_cache_t:dir search_dir_perms;
	files_search_var($1)
')

########################################
## <summary>
##	Read amazon_ecs_init cache files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amazon_ecs_init_read_cache_files',`
	gen_require(`
		type amazon_ecs_init_cache_t;
	')

	files_search_var($1)
	read_files_pattern($1, amazon_ecs_init_cache_t, amazon_ecs_init_cache_t)
')

########################################
## <summary>
##	Create, read, write, and delete
##	amazon_ecs_init cache files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amazon_ecs_init_manage_cache_files',`
	gen_require(`
		type amazon_ecs_init_cache_t;
	')

	files_search_var($1)
	manage_files_pattern($1, amazon_ecs_init_cache_t, amazon_ecs_init_cache_t)
')

########################################
## <summary>
##	Manage amazon_ecs_init cache dirs.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amazon_ecs_init_manage_cache_dirs',`
	gen_require(`
		type amazon_ecs_init_cache_t;
	')

	files_search_var($1)
	manage_dirs_pattern($1, amazon_ecs_init_cache_t, amazon_ecs_init_cache_t)
')


########################################
## <summary>
##	Search amazon_ecs_init lib directories.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amazon_ecs_init_search_lib',`
	gen_require(`
		type amazon_ecs_init_var_lib_t;
	')

	allow $1 amazon_ecs_init_var_lib_t:dir search_dir_perms;
	files_search_var_lib($1)
')

########################################
## <summary>
##	Read amazon_ecs_init lib files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amazon_ecs_init_read_lib_files',`
	gen_require(`
		type amazon_ecs_init_var_lib_t;
	')

	files_search_var_lib($1)
	read_files_pattern($1, amazon_ecs_init_var_lib_t, amazon_ecs_init_var_lib_t)
')

########################################
## <summary>
##	Manage amazon_ecs_init lib files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amazon_ecs_init_manage_lib_files',`
	gen_require(`
		type amazon_ecs_init_var_lib_t;
	')

	files_search_var_lib($1)
	manage_files_pattern($1, amazon_ecs_init_var_lib_t, amazon_ecs_init_var_lib_t)
')

########################################
## <summary>
##	Manage amazon_ecs_init lib directories.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`amazon_ecs_init_manage_lib_dirs',`
	gen_require(`
		type amazon_ecs_init_var_lib_t;
	')

	files_search_var_lib($1)
	manage_dirs_pattern($1, amazon_ecs_init_var_lib_t, amazon_ecs_init_var_lib_t)
')

########################################
## <summary>
##	Execute amazon_ecs_init server in the amazon_ecs_init domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`amazon_ecs_init_systemctl',`
	gen_require(`
		type amazon_ecs_init_t;
		type amazon_ecs_init_unit_file_t;
	')

	systemd_exec_systemctl($1)
        systemd_read_fifo_file_passwd_run($1)
	allow $1 amazon_ecs_init_unit_file_t:file read_file_perms;
	allow $1 amazon_ecs_init_unit_file_t:service manage_service_perms;

	ps_process_pattern($1, amazon_ecs_init_t)
')


########################################
## <summary>
##	All of the rules required to administrate
##	an amazon_ecs_init environment
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	Role allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`amazon_ecs_init_admin',`
	gen_require(`
		type amazon_ecs_init_t;
		type amazon_ecs_init_cache_t;
		type amazon_ecs_init_var_lib_t;
	type amazon_ecs_init_unit_file_t;
	')

	allow $1 amazon_ecs_init_t:process { signal_perms };
	ps_process_pattern($1, amazon_ecs_init_t)

    tunable_policy(`deny_ptrace',`',`
        allow $1 amazon_ecs_init_t:process ptrace;
    ')

	files_search_var($1)
	admin_pattern($1, amazon_ecs_init_cache_t)

	files_search_var_lib($1)
	admin_pattern($1, amazon_ecs_init_var_lib_t)

	amazon_ecs_init_systemctl($1)
	admin_pattern($1, amazon_ecs_init_unit_file_t)
	allow $1 amazon_ecs_init_unit_file_t:service all_service_perms;
	optional_policy(`
		systemd_passwd_agent_exec($1)
		systemd_read_fifo_file_passwd_run($1)
	')
')
